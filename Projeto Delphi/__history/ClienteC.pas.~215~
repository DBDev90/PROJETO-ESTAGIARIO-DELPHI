unit ClienteC;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, StdCtrls, Mask, Buttons;

type
  TTClienteC = class(TForm)
    Panel1: TPanel;
    Panel2: TPanel;
    cbAtivo: TCheckBox;
    edNomeClienteC: TEdit;
    lbNomeClienteC: TLabel;
    lbRgClienteC: TLabel;
    lblAtivo: TLabel;
    btnCancelar: TBitBtn;
    edRgClienteC: TMaskEdit;
    btnSalvar: TBitBtn;
    procedure btnCancelarClick(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
    xCodigo, yCodigo: string;
    AcaoTela: Char;
    procedure DesabilitaComponentes;
//    procedure CarregaDados;
  public
    { Public declarations }
    function ChamaTela(Codigo: string; pAcaotela: Char): string;
  end;

var
  TClienteC: TTClienteC;

implementation

uses
  Funcoes, Funcoesdb, DMPrincipal, Produto, Cliente;

{$R *.dfm}

{ TTClienteC }


{ TTClienteC }

procedure TTClienteC.btnCancelarClick(Sender: TObject);
begin
  TClienteC.Close;
end;

function TTClienteC.ChamaTela(Codigo: string; pAcaotela: Char): string;
begin
  TClienteC := TTClienteC.Create(Application);
  with TClienteC do
  begin
    xCodigo := Codigo;
    AcaoTela := pAcaotela;

    if pAcaotela <> 'I' then
      CarregaDados
    else
    begin
      cbAtivo.Checked := True;
      cbAtivo.Enabled := False;
    end;
    ShowModal;
    Result := yCodigo;
  end;
  FreeAndNil(TClienteC);
end;

procedure TTClienteC.DesabilitaComponentes;
begin
  edNomeClienteC.ReadOnly := True;
  edRgClienteC.ReadOnly := True;
  cbAtivo.Enabled := False;
  btnSalvar.Visible := False;
end;

procedure TTClienteC.FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
  case Key of
    VK_ESCAPE:
      begin
        if (btnCancelar.Visible) and (btnCancelar.Enabled) then
          btnCancelar.Click;
      end;
    VK_F5:
      begin
        if (btnSalvar.Visible) and (btnSalvar.Enabled) then
          btnSalvar.Click;
      end;
  end;
end;

procedure TTClienteC.FormShow(Sender: TObject);
begin
  if AcaoTela = 'I' then
  begin
    if edNomeClienteC.CanFocus then
      edNomeClienteC.SetFocus;
  end;
end;

end.

