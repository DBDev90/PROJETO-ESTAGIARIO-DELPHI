unit ProdutoC;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls, Mask, rxToolEdit, ComCtrls;

type
  TTProdutoC = class(TForm)
    Panel1: TPanel;
    cbAtivo: TCheckBox;
    btnSalvar: TButton;
    btnCancelar: TButton;
    Panel2: TPanel;
    lbNomeClienteC: TLabel;
    lbRgClienteC: TLabel;
    edDescProdC: TEdit;
    edPrecoProdC: TEdit;
    Label1: TLabel;
    DateEdit1: TDateEdit;
    procedure btnCancelarClick(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
  private
    { Private declarations }
    xCodigo: string;
    AcaoTela: Char;
    procedure DesabilitaComponentes;
    procedure CarregaDados;
  public
    { Public declarations }
    procedure ChamaTelaP(Codigo: string; pAcaoTela: Char);
  end;

var
  TProdutoC: TTProdutoC;

implementation

uses
  Funcoes, DMPrincipal, Funcoesdb;

{$R *.dfm}

procedure TTProdutoC.btnCancelarClick(Sender: TObject);
begin
  TProdutoC.Close;
end;

procedure TTProdutoC.btnSalvarClick(Sender: TObject);
begin
  if Empty(edDescProdC.Text) then
  begin
    EnviaMensagem('Informe a descrição!','Informação',mtInformation,[mbOK]);
    if edDescProdC.CanFocus then
      edDescProdC.SetFocus;
    Exit;    
  end;
  if Empty(edPrecoProdC.Text) then
  begin  
    EnviaMensagem('Informe o preço!', 'Informação',mtInformation,[mbOK]);
    if edPrecoProdC.CanFocus then
      edPrecoProdC.SetFocus;
    Exit;
  end;
  if ValidarData(DateEdit1.Text) then
  begin
    EnviaMensagem('Informe uma data de validade!','Informação',mtInformation,[mbOK]);
    Exit;
  end;

  with TDMPrincipal.qAux do
  begin
    case AcaoTela of
      'I':
      begin
        Close;
        SQL.Clear;
        SQL.Add('INSERT INTO PRODUTO(DESCRICAO,PRECO,DATA_VALIDADE,ATIVO)');
        SQL.Add('VALUES(' + StringTextSql(edDescProdC.Text));
        SQL.Add(', ' + StringTextSql(edPrecoProdC.Text));
        SQL.Add(', ' + StringTextSql(FormatDateTime('yyyy-mm-dd hh:mm:ss',DateEdit1.Date)));
        SQL.Add(',' + BooleanTextSql(cbAtivo.Checked));
        SQL.Add(')');
        ExecSQL;
      end;
      'E':
      begin
        Close;
        sql.Clear;
        SQL.Add('UPDATE PRODUTO');
        SQL.Add('SET');
        SQL.Add('DESCRICAO = ' + StringTextSql(edDescProdC.Text));
        SQL.Add(',PRECO = ' + edPrecoProdC.Text);
        SQL.Add(',DATA_VALIDADE = ' + StringTextSql(FormatDateTime('yyyy-mm-dd hh:mm:ss',DateEdit1.Date)));

        if cbAtivo.Checked then
          SQL.Add(',ATIVO = 1')
        else
          SQL.Add(',ATIVO = 0');

        SQL.Add('WHERE COD_PRODUTO = ' + xCodigo);
        InputBox('','',SQL.Text);
        ExecSQL;
      end;
    end;
  end;
  Close;
end;

procedure TTProdutoC.CarregaDados;
begin
  with TDMPrincipal.qAux do
  begin
    Close;
    SQL.Clear;
    SQL.Add('SELECT DESCRICAO,PRECO,DATA_VALIDADE,ATIVO');
    SQL.Add('FROM PRODUTO');
    SQL.Add('WHERE COD_PRODUTO = ' + xCodigo);
    Open;
    if not IsEmpty then
    begin
      edDescProdC.Text := FieldByName('DESCRICAO').AsString;
      edPrecoProdC.Text := FieldByName('PRECO').AsString;
      DateEdit1.Text := FieldByName('DATA_VALIDADE').AsString;
      cbAtivo.Checked := FieldByName('ATIVO').AsBoolean;
    end;
    case AcaoTela of
      'C':
      begin
          DesabilitaComponentes;
      end;
    end;
  end;
end;

procedure TTProdutoC.ChamaTelaP(Codigo: string; pAcaoTela: Char);
begin
  TProdutoC := TTProdutoC.Create(Application);
  with TProdutoC do
  begin
    xCodigo := Codigo;
    AcaoTela := pAcaoTela;

    if pAcaoTela <> 'I' then
      CarregaDados
    else
    begin
      cbAtivo.Checked := True;
      cbAtivo.Enabled := False;
    end;



    ShowModal;
  end;
  FreeAndNil(TProdutoC);
end;

procedure TTProdutoC.DesabilitaComponentes;
begin
  edDescProdC.ReadOnly := True;
  edPrecoProdC.ReadOnly := True;
  DateEdit1.ReadOnly := True;
  cbAtivo.Enabled := False;
  btnSalvar.Visible := False;
end;

end.
